{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/abhishekpatawari/Desktop/ost_exp/nextjs-dashboard/app/lib/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { z } from \"zod\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\n\nimport postgres from \"postgres\";\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: \"require\" });\nconst FormSchema = z.object({\n  id: z.string(),\n  customerId: z.string(),\n  amount: z.coerce.number(),\n  status: z.enum([\"pending\", \"paid\"]),\n  date: z.string(),\n});\n\nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\nconst UpdateInvoice = FormSchema.omit({ id: true, date: true });\n\nexport async function createInvoice(formData: FormData) {\n  const { customerId, amount, status } = CreateInvoice.parse({\n    customerId: formData.get(\"customerId\"),\n    amount: formData.get(\"amount\"),\n    status: formData.get(\"status\"),\n  });\n\n  const amountInCents = amount * 100;\n  const date = new Date().toISOString().split(\"T\")[0];\n\n  try {\n    await sql`\n      INSERT INTO invoices (customer_id, amount, status, date)\n      VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\n    `;\n  } catch (error) {\n    // We'll also log the error to the console for now\n    console.error(error);\n    return {\n      message: \"Database Error: Failed to Create Invoice.\",\n    };\n  }\n\n  revalidatePath(\"/dashboard/invoices\");\n  redirect(\"/dashboard/invoices\");\n}\nexport async function updateInvoice(id: string, formData: FormData) {\n  const { customerId, amount, status } = UpdateInvoice.parse({\n    customerId: formData.get(\"customerId\"),\n    amount: formData.get(\"amount\"),\n    status: formData.get(\"status\"),\n  });\n\n  const amountInCents = amount * 100;\n\n  try {\n    await sql`\n        UPDATE invoices\n        SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\n        WHERE id = ${id}\n      `;\n  } catch (error) {\n    // We'll also log the error to the console for now\n    console.error(error);\n    return { message: \"Database Error: Failed to Update Invoice.\" };\n  }\n\n  revalidatePath(\"/dashboard/invoices\");\n  redirect(\"/dashboard/invoices\");\n}\n\nexport async function deleteInvoice(id: string) {\n  throw new Error(\"Failed to Delete Invoice\");\n\n  await sql`DELETE FROM invoices WHERE id = ${id}`;\n  revalidatePath(\"/dashboard/invoices\");\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;AAAA;AACA;AACA;AAAA;AAEA;;;;;;;AAEA,MAAM,MAAM,IAAA,wMAAQ,EAAC,QAAQ,GAAG,CAAC,YAAY,EAAG;IAAE,KAAK;AAAU;AACjE,MAAM,aAAa,wMAAC,CAAC,MAAM,CAAC;IAC1B,IAAI,wMAAC,CAAC,MAAM;IACZ,YAAY,wMAAC,CAAC,MAAM;IACpB,QAAQ,wMAAC,CAAC,MAAM,CAAC,MAAM;IACvB,QAAQ,wMAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAO;IAClC,MAAM,wMAAC,CAAC,MAAM;AAChB;AAEA,MAAM,gBAAgB,WAAW,IAAI,CAAC;IAAE,IAAI;IAAM,MAAM;AAAK;AAC7D,MAAM,gBAAgB,WAAW,IAAI,CAAC;IAAE,IAAI;IAAM,MAAM;AAAK;AAEtD,eAAe,cAAc,QAAkB;IACpD,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,cAAc,KAAK,CAAC;QACzD,YAAY,SAAS,GAAG,CAAC;QACzB,QAAQ,SAAS,GAAG,CAAC;QACrB,QAAQ,SAAS,GAAG,CAAC;IACvB;IAEA,MAAM,gBAAgB,SAAS;IAC/B,MAAM,OAAO,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;IAEnD,IAAI;QACF,MAAM,GAAG,CAAC;;cAEA,EAAE,WAAW,EAAE,EAAE,cAAc,EAAE,EAAE,OAAO,EAAE,EAAE,KAAK;IAC7D,CAAC;IACH,EAAE,OAAO,OAAO;QACd,kDAAkD;QAClD,QAAQ,KAAK,CAAC;QACd,OAAO;YACL,SAAS;QACX;IACF;IAEA,IAAA,8RAAc,EAAC;IACf,IAAA,gVAAQ,EAAC;AACX;AACO,eAAe,cAAc,EAAU,EAAE,QAAkB;IAChE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,cAAc,KAAK,CAAC;QACzD,YAAY,SAAS,GAAG,CAAC;QACzB,QAAQ,SAAS,GAAG,CAAC;QACrB,QAAQ,SAAS,GAAG,CAAC;IACvB;IAEA,MAAM,gBAAgB,SAAS;IAE/B,IAAI;QACF,MAAM,GAAG,CAAC;;0BAEY,EAAE,WAAW,WAAW,EAAE,cAAc,WAAW,EAAE,OAAO;mBACnE,EAAE,GAAG;MAClB,CAAC;IACL,EAAE,OAAO,OAAO;QACd,kDAAkD;QAClD,QAAQ,KAAK,CAAC;QACd,OAAO;YAAE,SAAS;QAA4C;IAChE;IAEA,IAAA,8RAAc,EAAC;IACf,IAAA,gVAAQ,EAAC;AACX;AAEO,eAAe,cAAc,EAAU;IAC5C,MAAM,IAAI,MAAM;IAEhB,MAAM,GAAG,CAAC,gCAAgC,EAAE,GAAG,CAAC;IAChD,IAAA,8RAAc,EAAC;AACjB;;;IAxDsB;IA0BA;IAyBA;;AAnDA,8XAAA;AA0BA,8XAAA;AAyBA,8XAAA","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/abhishekpatawari/Desktop/ost_exp/nextjs-dashboard/.next-internal/server/app/dashboard/invoices/create/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {deleteInvoice as '405277926e42d6b49a672e6730b548060368573088'} from 'ACTIONS_MODULE0'\nexport {createInvoice as '4056025732d8eb70d655d282b0568820e8ba127f4a'} from 'ACTIONS_MODULE0'\nexport {updateInvoice as '60c1af7322b4e43df0210e294b7c918983e75080ea'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}}]
}